!===========================  CONWFN    U10 ============================
!           CONWFN constructs constraints from the wfn.* file         >>
!--------------------------------------------------------------------->>
!   VARIABLES/  |                      DESCRIPTION OF                 >>
!   PARAMETERS  |                   VARIABLES/PARAMETERS              >>
!.....................................................................>>
!nwfnfl         : # of wfn.* files generated by atompaw program       >>
!pwmx(nwfnfl)   : max amplitude of plane wave in wfn.* files          >>
!pwmn(nwfnfl)   : min amplitude of plane wave in wfn.* files          >>
!pspwmx(nwfnfl) : max amplitude of pseudo plane wave in wfn.* files   >>
!pspwmn(nwfnfl) : min amplitude of pseudo plane wave in wfn.* files   >>
!prjmx(nwfnfl)  : max amplitude of projector in wfn.* files           >>
!prjmn(nwfnfl)  : min amplitude of projector in wfn.* files           >>
      subroutine CONWFN(nwfnfl,pwmx,pspwmx,prjmx,pwmn,pspwmn,prjmn)!  >>
      IMPLICIT NONE!                                                  >>
      INTEGER i,j,nlines,ifl,nwfnfl!                                  >>
      INTEGER, PARAMETER :: DP = SELECTED_REAL_KIND(14)!              >>
      REAL(DP), DIMENSION(:), ALLOCATABLE :: r,pw,pspw,prj!           >>
      DOUBLE PRECISION pwmx(nwfnfl),pspwmx(nwfnfl),prjmx(nwfnfl)!     >>
      DOUBLE PRECISION pwmn(nwfnfl),pspwmn(nwfnfl),prjmn(nwfnfl)!     >>
      CHARACTER*10 cna!                                               >>
!=======================================================================
! OPEN THE wfn* FILES
      ifl=1
      do i=1,nwfnfl
        if(i.lt.10)then
          write(cna,FMT="(I1)")i
        elseif(i.lt.100)then
          write(cna,FMT="(I2)")i
        endif
!        write(*,*)cna
        open(ifl,file='wfn'//trim(cna),status='unknown')
        rewind(ifl)
        read (ifl,*)
        nlines = 0
        do!calculate number of lines in wfn* fl
          read (ifl,*, END=10)
          nlines = nlines + 1
        enddo
10      rewind(ifl)
!        write(*,*)'nlines=',nlines
        read(ifl,*)
        allocate(r(nlines))
        allocate(pw(nlines))
        allocate(pspw(nlines))
        allocate(prj(nlines))
        do j=1,nlines
          read(ifl,*)r(j),pw(j),pspw(j),prj(j)
        enddo
        pwmx(i)=pw(1)
        pspwmx(i)=pspw(1)
        prjmx(i)=prj(1)
        pwmn(i)=pw(1)
        pspwmn(i)=pspw(1)
        prjmn(i)=prj(1)
        do j=2,nlines
         if(pw(j).gt.pwmx(i))pwmx(i)=pw(j)
         if(pspw(j).gt.pspwmx(i))pspwmx(i)=pspw(j)
         if(prj(j).gt.prjmx(i))prjmx(i)=prj(j)
         if(pw(j).lt.pwmn(i))pwmn(i)=pw(j)
         if(pspw(j).lt.pspwmn(i))pspwmn(i)=pspw(j)
         if(prj(j).lt.prjmn(i))prjmn(i)=prj(j)
        enddo
        close(ifl)
        deallocate(r)
        deallocate(pw)
        deallocate(pspw)
        deallocate(prj)
      enddo
      return
      end
